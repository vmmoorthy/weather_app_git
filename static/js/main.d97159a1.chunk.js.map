{"version":3,"sources":["modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","ChooseCityLabel","span","WelcomeWeatherLogo","img","CityComponent","props","updateCity","fetchWeather","src","onSubmit","onChange","e","target","value","placeholder","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Location","Condition","WeatherInfoLabel","WeatherIcon","WeatherContainer","div","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","WeatherIcons","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d97159a1.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst SearchBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin: 50px;\r\n  border: black solid 1px;\r\n  border-radius: 2px;\r\n\r\n  & input {\r\n    padding: 10px;\r\n    color: #FFDD35;\r\n    font-size: 14px;\r\n    border: none;\r\n    outline: none;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n  & button {\r\n    background-color: #BD34FE;\r\n    font-size: 14px;\r\n    padding: 0 10px;\r\n    color: #FFDD35;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst ChooseCityLabel = styled.span`\r\n  color: black;\r\n  margin: 10px auto;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\nconst WelcomeWeatherLogo = styled.img`\r\n  width: 140px;\r\n  height: 140px;\r\n  margin: 40px auto;\r\n`;\r\nconst CityComponent = (props) => {\r\n  const { updateCity, fetchWeather } = props;\r\n  return (\r\n    <>\r\n      <WelcomeWeatherLogo src={\"/weather_app_git/icons/perfect-day.svg\"} />\r\n      <ChooseCityLabel>Find Weather of your Place</ChooseCityLabel>\r\n      <SearchBox onSubmit={fetchWeather}>\r\n        <input\r\n          onChange={(e) => updateCity(e.target.value)}\r\n          placeholder=\"Enter Your Place\"\r\n        />\r\n        <button type={\"submit\"}>Search</button>\r\n      </SearchBox>\r\n    </>\r\n  );\r\n};\r\nexport default CityComponent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {WeatherIcons} from \"../App\";\r\n\r\nexport const WeatherInfoIcons = {\r\n    sunset: \"/weather_app_git/icons/temp.svg\",\r\n    sunrise: \"/weather_app_git/icons/temp.svg\",\r\n    humidity: \"/weather_app_git/icons/humidity.svg\",\r\n    wind: \"/weather_app_git/icons/wind.svg\",\r\n    pressure: \"/weather_app_git/icons/pressure.svg\",\r\n};\r\nconst Location = styled.span`\r\n  margin: 15px auto;\r\n  text-transform: capitalize;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n`;\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  text-transform: capitalize;\r\n  font-size: 14px;\r\n  & span {\r\n    font-size: 28px;\r\n  }\r\n`;\r\nconst WeatherInfoLabel = styled.span`\r\n  margin: 20px 25px 10px;\r\n  text-transform: capitalize;\r\n  text-align: start;\r\n  width: 90%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 30px auto;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n    const {name, value} = props;\r\n    return (\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]}/>\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    );\r\n};\r\nconst WeatherComponent = (props) => {\r\n    const {weather} = props;\r\n    const isDay = weather?.weather[0].icon?.includes('d')\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n    }\r\n    return (\r\n        <>\r\n            <WeatherContainer>\r\n                <Condition>\r\n                    <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\r\n                    {`  |  ${weather?.weather[0].description}`}\r\n                </Condition>\r\n                <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]}/>\r\n            </WeatherContainer>\r\n            <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n\r\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\r\n                                      value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\r\n                <WeatherInfoComponent name={\"humidity\"} value={weather?.main?.humidity}/>\r\n                <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed}/>\r\n                <WeatherInfoComponent name={\"pressure\"} value={weather?.main?.pressure}/>\r\n            </WeatherInfoContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherComponent;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Axios from \"axios\";\r\nimport CityComponent from \"./modules/CityComponent\";\r\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\r\n\r\n\r\n\r\nexport const WeatherIcons = {\r\n  \"01d\": \"/weather_app_git/icons/sunny.svg\",\r\n  \"01n\": \"/weather_app_git/icons/night.svg\",\r\n  \"02d\": \"/weather_app_git/icons/day.svg\",\r\n  \"02n\": \"/weather_app_git/icons/cloudy-night.svg\",\r\n  \"03d\": \"/weather_app_git/icons/cloudy.svg\",\r\n  \"03n\": \"/weather_app_git/icons/cloudy.svg\",\r\n  \"04d\": \"/weather_app_git/icons/perfect-day.svg\",\r\n  \"04n\": \"/weather_app_git/icons/cloudy-night.svg\",\r\n  \"09d\": \"/weather_app_git/icons/rain.svg\",\r\n  \"09n\": \"/weather_app_git/icons/rain-night.svg\",\r\n  \"10d\": \"/weather_app_git/icons/rain.svg\",\r\n  \"10n\": \"/weather_app_git/icons/rain-night.svg\",\r\n  \"11d\": \"/weather_app_git/icons/storm.svg\",\r\n  \"11n\": \"/weather_app_git/icons/storm.svg\",\r\n};\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 380px;\r\n  padding: 20px 10px;\r\n  margin: auto;\r\n  border-radius: 4px;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n  background: white;\r\n  font-family: Montserrat;\r\n`;\r\n\r\nconst AppLabel = styled.span`\r\n  color: black;\r\n  margin: 20px auto;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\nconst CloseButton = styled.span`\r\n  padding: 2px 3px;\r\n  background-color: black;\r\n  border-radius: 50%;\r\n  color: white;\r\n  position: absolute;\r\n`;\r\n\r\nfunction App() {\r\n  const [city, updateCity] = useState();\r\n  const [weather, updateWeather] = useState();\r\n  const fetchWeather = async (e) => {\r\n    e.preventDefault();\r\n    const response = await Axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\r\n    );\r\n    updateWeather(response.data);\r\n  };\r\n  return (\r\n    <Container>\r\n      <AppLabel>Digitise Weather App</AppLabel>\r\n      {city && weather ? (\r\n        <WeatherComponent weather={weather} city={city} />\r\n      ) : (\r\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}